name: Playwright Tests

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:
  schedule:
    - cron: '1 18 * * 3'  # Every Wednesday 12:01 AM Dhaka time

env:
  TZ: Asia/Dhaka

jobs:
  test-local:
    runs-on: ubuntu-latest
    if: github.event_name != 'schedule'
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - run: npm ci

      - run: npx playwright install --with-deps

      - id: start_time
        run: echo "START_TIME=$(date +%s)" >> $GITHUB_ENV

      - run: npx playwright test --workers=1 --grep '@smoke'

      - id: summary
        run: |
          END_TIME=$(date +%s)
          echo "END_TIME=$END_TIME" >> $GITHUB_ENV
          DURATION=$((END_TIME - START_TIME))
          echo "DURATION=$DURATION seconds" >> $GITHUB_ENV

          RESULTS_FILE="playwright-report/test-results.json"
          if [ -f "$RESULTS_FILE" ]; then
            PASSED=$(jq '[.suites[] | .specs[] | .tests[] | .results[] | select(.status=="passed")] | length' "$RESULTS_FILE")
            FAILED=$(jq '[.suites[] | .specs[] | .tests[] | .results[] | select(.status=="failed")] | length' "$RESULTS_FILE")
            SKIPPED=$(jq '[.suites[] | .specs[] | .tests[] | .results[] | select(.status=="skipped")] | length' "$RESULTS_FILE")
          else
            PASSED=0
            FAILED=0
            SKIPPED=0
          fi

          echo "PASSED=$PASSED" >> $GITHUB_ENV
          echo "FAILED=$FAILED" >> $GITHUB_ENV
          echo "SKIPPED=$SKIPPED" >> $GITHUB_ENV

      - run: |
          ZIP_TIMESTAMP=$(TZ="Asia/Dhaka" date +"%Y-%m-%d_%I-%M_%p")
          EMAIL_TIMESTAMP=$(TZ="Asia/Dhaka" date +"%Y-%m-%d %I:%M %p")

          ZIP_NAME="playwright-report-$ZIP_TIMESTAMP.zip"
          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV
          echo "EMAIL_TIMESTAMP=$EMAIL_TIMESTAMP" >> $GITHUB_ENV

          zip -r "$ZIP_NAME" playwright-report

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ env.ZIP_NAME }}
          path: ${{ env.ZIP_NAME }}

      - uses: dawidd6/action-send-mail@v3
        if: always()
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASS }}
          subject: 🧪 Playwright Smoke Test Report on  ${{ env.EMAIL_TIMESTAMP }}
          to: demoblaze_playwright@maildrop.cc
          from: Playwright CI <${{ secrets.EMAIL_USER }}>
          html_body: |
            Hello,<br><br>
            ✅ <b>Playwright smoke test run completed</b><br><br>

            📋 <b>Test Summary:</b><br>
            🟢 Passed: <b>${{ env.PASSED }}</b><br>
            🔴 Failed: <b>${{ env.FAILED }}</b><br>
            ⚪ Skipped: <b>${{ env.SKIPPED }}</b><br>
            ⏱ Duration: <b>${{ env.DURATION }}</b><br><br>

            👤 Triggered by: <b>${{ github.actor }}</b><br>
            🌿 Branch: <b>${{ github.head_ref || github.ref_name }}</b><br>
            📌 Status: <b>${{ job.status }}</b><br><br>

            📎 <a href="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}">
            Click here to view or download the full test report</a><br><br>

            📁 Attached report zip: <b>${{ env.ZIP_NAME }}</b><br><br>

            Regards,<br>
            CI Pipeline

  test-docker:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4

      - run: |
          docker build -t my-playwright-tests .
          docker run --rm \
            -e "PLAYWRIGHT_ARGS=--workers=1 --grep='@smoke'" \
            -v ${{ github.workspace }}:/app \
            my-playwright-tests

      - run: |
          ZIP_TIMESTAMP=$(TZ="Asia/Dhaka" date +"%Y-%m-%d_%I-%M_%p")
          ZIP_NAME="docker-playwright-report-$ZIP_TIMESTAMP.zip"
          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV

          zip -r "$ZIP_NAME" playwright-report

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ env.ZIP_NAME }}
          path: ${{ env.ZIP_NAME }}

